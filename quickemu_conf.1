.\" Automatically generated by Pandoc 2.2.3.2
.\"
.TH "QUICKEMU_CONF" "1" "January 7, 2022" "quickemu_conf" "Quickemu Configuration Manual"
.hy
.SH NAME
.PP
quickemu_conf \- Options and parameters in the quickemu <vm>.conf
.SH DESCRIPTION
.PP
\f[B]quickemu\f[] will create and run highly optimised desktop virtual
machines for Linux, macOS and Windows.
It uses sensible defaults, but many configuration options can be
overridden in the required configuration file, which will as a minimum
specify the path to the installation ISO and QEMU disk for the installed
VM
.SH OPTIONS
.PP
These are the options and defaults for the <vm>.conf file
.IP
.nf
\f[C]
#\ Lowercase\ variables\ are\ used\ in\ the\ VM\ config\ file\ only
boot="efi"
bridge=""
cpu_cores=""
disk_img=""
disk_size=""
fixed_iso=""
floppy=""
guest_os="linux"
img=""
iso=""
macos_release=""
port_forwards=()
preallocation="off"
ram=""
secureboot="off"
tpm="off"
usb_devices=()
\f[]
.fi
.SH EXAMPLES
.IP
.nf
\f[C]
guest_os="linux"
disk_img="debian\-bullseye/disk.qcow2"
iso="debian\-bullseye/firmware\-11.0.0\-amd64\-DVD\-1.iso"
\f[]
.fi
.PP
The default macOS configuration looks like this:
.IP
.nf
\f[C]
guest_os="macos"
img="macos\-catalina/RecoveryImage.img"
disk_img="macos\-catalina/disk.qcow2"
macos_release="catalina"
\f[]
.fi
.IP \[bu] 2
\f[C]guest_os="macos"\f[] instructs Quickemu to optimise for macOS.
.IP \[bu] 2
\f[C]macos_release="catalina"\f[] instructs Quickemu to optimise for a
particular macOS release.
.RS 2
.IP \[bu] 2
For example VirtIO Network and Memory Ballooning are available in Big
Sur and newer, but not previous releases.
.IP \[bu] 2
And VirtIO Block Media (disks) are supported/stable in Catalina and
newer.
.RE
.PP
The default Windows 11 configuration looks like this:
.IP
.nf
\f[C]
guest_os="windows"
disk_img="windows\-11/disk.qcow2"
iso="windows\-11/Win11_EnglishInternational_x64.iso"
fixed_iso="windows\-11/virtio\-win.iso"
tpm="on"
\f[]
.fi
.IP \[bu] 2
\f[C]guest_os="windows"\f[] instructs \f[C]quickemu\f[] to optimise for
Windows.
.IP \[bu] 2
\f[C]fixed_iso=\f[] specifies the ISO image that provides VirtIO
drivers.
.IP \[bu] 2
\f[C]tpm="on"\f[] instructs \f[C]quickemu\f[] to create a software
emulated TPM device using \f[C]swtpm\f[].
.SH BIOS and EFI
.PP
Since Quickemu 2.1.0 \f[C]efi\f[] is the default boot option.
If you want to override this behaviour then add the following line to
you VM configuration to enable legacy BIOS.
.IP \[bu] 2
\f[C]boot="legacy"\f[] \- Enable Legacy BIOS boot
.SH Tuning CPU cores, RAM & disks
.PP
By default, Quickemu will calculate the number of CPUs cores and RAM to
allocate to a VM based on the specifications of your host computer.
You can override this default behaviour and tune the VM configuration to
your liking.
.PP
Add additional lines to your virtual machine configuration:
.IP \[bu] 2
\f[C]cpu_cores="4"\f[] \- Specify the number of CPU cores allocated to
the VM
.IP \[bu] 2
\f[C]ram="4G"\f[] \- Specify the amount of RAM to allocate to the VM
.IP \[bu] 2
\f[C]disk_size="16G"\f[] \- Specify the size of the virtual disk
allocated to the VM
.SS Disk preallocation
.PP
Preallocation mode (allowed values: \f[C]off\f[] (default),
\f[C]metadata\f[], \f[C]falloc\f[], \f[C]full\f[]).
An image with preallocated metadata is initially larger but can improve
performance when the image needs to grow.
.PP
Specify what disk preallocation should be used, if any, when creating
the system disk image by adding a line like this to your VM
configuration.
.IP \[bu] 2
\f[C]preallocation="metadata"\f[]
.SS CD\-ROM disks
.PP
If you want to expose an ISO image from the host to guest add the
following line to the VM configuration:
.IP \[bu] 2
\f[C]fixed_iso="/path/to/image.iso"\f[]
.SS Floppy disks
.PP
If you're like Alan Pope (https://popey.com) you'll probably want to
mount a floppy disk image in the guest.
To do so add the following line to the VM configuration:
.IP \[bu] 2
\f[C]floppy="/path/to/floppy.img"\f[]
.SH File Sharing
.PP
All File Sharing options will only expose \f[C]~/Public\f[] (or
localised variations) for the current user to the guest VMs.
.SS Samba 🐧 🍏 🪟
.PP
If \f[C]smbd\f[] is available on the host, Quickemu will automatically
enable the built\-in QEMU support for exposing a Samba share from the
host to the guest.
.PP
You can install the minimal Samba components on Ubuntu using:
.IP
.nf
\f[C]
sudo\ apt\ install\ \-\-no\-install\-recommends\ samba
\f[]
.fi
.SS SPICE WebDAV 🐧 🪟
.IP \[bu] 2
TBD
.SS VirtIO\-9P 🐧 🍏
.IP \[bu] 2
TBD
.SH Network port forwarding
.PP
Add an additional line to your virtual machine configuration.
For example:
.IP \[bu] 2
\f[C]port_forwards=("8123:8123"\ "8888:80")\f[]
.PP
In the example above:
.IP \[bu] 2
Port 8123 on the host is forwarded to port 8123 on the guest.
.IP \[bu] 2
Port 8888 on the host is forwarded to port 80 on the guest.
.SH Bridged networking
.PP
Connect your virtual machine to a preconfigured network bridge.
Add an additional line to your virtual machine configuration
.IP \[bu] 2
\f[C]bridge="br0"\f[]
.SH USB redirection
.PP
Quickemu supports USB redirection via SPICE pass\-through and host
pass\-through.
.SS SPICE redirection (recommended)
.PP
Using SPICE for USB pass\-through is easiest as it doesn't require any
elevated permission, start Quickemu with \f[C]\-\-display\ spice\f[] and
then select \f[C]Input\f[] \->
\f[C]Select\ USB\ Device\ for\ redirection\f[] from the menu to choose
which device(s) you want to attach to the guest.
.SS Host redirection \f[B]NOT Recommended\f[]
.PP
\f[B]USB host redirection is not recommended\f[], it is provided purely
for backwards compatibility to older versions of Quickemu.
Using SPICE is preferred, see above.
.PP
Add an additional line to your virtual machine configuration.
For example:
.IP \[bu] 2
\f[C]usb_devices=("046d:082d"\ "046d:085e")\f[]
.PP
In the example above:
.IP \[bu] 2
The USB device with vendor_id 046d and product_id 082d will be exposed
to the guest.
.IP \[bu] 2
The USB device with vendor_id 046d and product_id 085e will be exposed
to the guest.
.PP
If the USB devices are not writable, \f[C]quickemu\f[] will display the
appropriate commands to modify the USB device(s) access permissions,
like this:
.IP
.nf
\f[C]
\ \-\ USB:\ \ \ \ \ \ Host\ pass\-through\ requested:
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \-\ Sennheiser\ Communications\ EPOS\ GTW\ 270\ on\ bus\ 001\ device\ 005\ needs\ permission\ changes:
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ sudo\ chown\ \-v\ root:user\ /dev/bus/usb/001/005
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ERROR!\ USB\ permission\ changes\ are\ required\ 👆
\f[]
.fi
.SH TPM
.PP
Since Quickemu 2.2.0 a software emulated TPM device can be added to
guest virtual machines.
Just add \f[C]tpm="on"\f[] to your VM configuration.
\f[C]quickget\f[] will automatically add this line to Windows 11 virtual
machines.
.SH AUTHORS
.PP
Written by Martin Wimpress.
.SH BUGS
.PP
Submit bug reports online at:
<https://github.com/quickemu-project/quickemu/issues>
.SH SEE ALSO
.PP
Full sources at: <https://github.com/quickemu-project/quickemu>
.PP
quickget(1), quickemu(1), quickgui(1
.SH AUTHORS
Martin Wimpress.
